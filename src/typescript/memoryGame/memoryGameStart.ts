/*

todo
게임시작 화면 
* 저장된 난이도에 따라 카드 수 결정
* 카드 랜덤 섞엇 배치
* 게임 시작 시 타이머 작동
* 카드 매칭 로직 처리
* 남은 시간, 점수, 매칭 수 업데이트
* 게임 종료 (시간 초과 or 전부 매칭 검사)
* 

플로우
1. 난이도 읽기
2. 카드 쌍 생성 ex["1","1", "2","2"...]
3. 카드 배열 섞기
4. 카드 DOM 동적 생성
5. 카드 클릭 이벤트 연결
6. 매칭 성공/실패 처리
7. 남은 시간 타이머 작동
8. 남은 시간 0되면 게임오버
9. 모두 찾으면 게임 클리어

상태관리 변수 

difficulty : number -> 어려움 정도
timer : number -> 타이머 (난이도에 따른 시간?)
timeleft -> 남은 시간
cards : [] -> 카드 담을 배열
flippedCards : []
matchedPairs : number = 0 -> 짝 검사
socore : number -> 점수


구현순서
1. 난이도 저장하고 이동하기 완성
2. 난이도에 맞게 카드 동적 생성 (일단 8쌍이 넘어오는 걸로 하드코딩해서 생성)
3. 카드 클릭 이벤트 - 뒤집기 / 매칭 체크
4. 타이머 작동 + 시간 종료 처리
5. 점수 계산 + UI 업데이트
6. 게임 종료 배너 띄우기
7. 다시 시작/ 난이도 재설정 버튼에 따른 동작 연결
8. 애니메이션(뒤집기, 매칭 성공 효과) 적용

수요일 목표
난이도 선택 + 화면 이동
- 난이도 선택 저장(해당 난이도 버튼 누르면)
- 시작버튼 누르면 페이지 이동
- sessionStorage 사용 해서 데이터 임시 저장

카드 생성 + 셔플 기능 완성
-카드 데이터 만들기(DOM?), 셔플 함수, 카드 동적 생성


목요일 목표
매칭 체크 (성공 알림 추가, 조건 추가(같은 카드 선택 x))
타이머/점수

카드 클릭/매칭 로직 완성
- 카드 클릭 -> 뒤집기 -> 매칭 검사
- 타이머 + 점수 + 게임 종료 처리

금요일 목표


*/
